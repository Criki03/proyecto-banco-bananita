package cajero;

// Importaciones necesarias
import static cajero.CambioMoneda.cuenta;
import java.awt.Graphics;
import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 * Esta clase representa la ventana de OtraCuenta en el cajero automático.
 * Permite ingresar el número de cuenta a la que se desea depositar y realizar la validación para la transacción.
 */
public class OtraCuenta extends javax.swing.JFrame {
    // Variables estáticas para almacenar información de cuentas y tarjetas
    static String cuenta;
    static String tarjeta;
    static String cuentaADepositar;
    // Instancia de la clase Fondo para el fondo de la ventana
    public Fondo imagen = new Fondo(); 
    
    /**
     * Constructor de la clase OtraCuenta.
     * @param cuenta Número de cuenta del usuario.
     * @param tarjeta Número de tarjeta asociada a la cuenta.
     */
    public OtraCuenta(String cuenta, String tarjeta) {
        this.cuenta = cuenta;
        this.tarjeta = tarjeta;
        this.setContentPane(imagen);
        initComponents();
        setResizable(false);
        // Configuración de los botones de confirmar transacción
        confirmar.setIcon(setIcono("/imagenes/confirmar.png", confirmar));
        confirmar.setPressedIcon(setIconoPrecionado("/imagenes/confirmar.png", confirmar, 30, 30));
    }

    // Método generado automáticamente que inicializa los componentes de la ventana
    private void initComponents() {
        // Inicialización de componentes como etiquetas, campos de texto y botones
        // Configuración de eventos para los botones
    }                         
    
    // Evento para el botón de confirmar transacción
    private void confirmarActionPerformed(java.awt.event.ActionEvent evt) {                                          
        accionAlApretar();
    }                                         
    
    // Método para realizar la acción al presionar el botón de confirmar
    public void accionAlApretar() {
        CambiosEnSaldo cambios = new CambiosEnSaldo();
        cuentaADepositar = numCuenta.getText();
        boolean verificarExistencia = cambios.verificarCuenta("ruta/cuentas/" + cuentaADepositar + ".txt");
        boolean verificarLaMisma = cambios.verificarMisma("ruta/cuentas/" + cuentaADepositar + ".txt");
        boolean verificarMoneda = cambios.verificarMonedaCoin("ruta/cuenta_destino.txt", "ruta/cuenta_origen.txt");
        if (cuenta.equals(cuentaADepositar)) {
            JOptionPane.showMessageDialog(null, "ERROR AL INGRESAR LA CUENTA ES LA MISMA");
            menu v = new menu(tarjeta, cuenta);
            v.setVisible(true);
            dispose();
        } else {
            if (verificarExistencia) {
                if (verificarMoneda) {
                    transaccionIII t = new transaccionIII(cuenta, tarjeta, cuentaADepositar);
                    t.setVisible(true);
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "LAS MONEDA QUE USTED MANEJA NO COINCIDE CON LA CUENTA A LA QUE INTENTA DEPOSITAR" + "\n" + "FAVOR DE CAMBIAR DE MONEDA");
                    menu v = new menu(tarjeta, cuenta);
                    v.setVisible(true);
                    dispose();
                }
            } else {
                JOptionPane.showMessageDialog(null, "LA CUENTA A LA QUE INTENTA DEPOSITAR NO EXISTE!");
                menu v = new menu(tarjeta, cuenta);
                v.setVisible(true);
                dispose();
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OtraCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OtraCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OtraCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OtraCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OtraCuenta(cuenta, tarjeta).setVisible(true);
            }
        });
    }
    
    // Clase interna para el fondo de la ventana
    class Fondo extends JPanel {
        private Image imagen;

        @Override
        public void paint(Graphics g) {
            imagen = new ImageIcon(getClass().getResource("/imagenes/fondo.png")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }

    // Método para establecer el ícono de un botón
    public Icon setIcono(String url, JButton b) {
        ImageIcon icon = new ImageIcon(getClass().getResource(url)); 
        int ancho = b.getWidth();
        int alto = b.getHeight();
        ImageIcon icono = new ImageIcon(icon.getImage().getScaledInstance(ancho, alto, Image.SCALE_DEFAULT)); 
        return icono;
    }

    // Método para establecer el ícono presionado de un botón
    public Icon setIconoPrecionado(String url, JButton b, int ancho, int alto) {
        ImageIcon icon = new ImageIcon(getClass().getResource(url));
        int width = b.getWidth() - ancho;
        int height = b.getHeight() - alto;
        ImageIcon icono = new ImageIcon(icon.getImage().getScaledInstance(width, height, Image.SCALE_DEFAULT));
        return icono;
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton confirmar;
    private javax.swing.JLabel imagen2;
    private javax.swing.JTextField numCuenta;
    private javax.swing.JLabel texto1;
    private javax.swing.JLabel texto4;
    private javax.swing.JLabel texto5;
    private javax.swing.JLabel texto6;
    // End of variables declaration                   
}
